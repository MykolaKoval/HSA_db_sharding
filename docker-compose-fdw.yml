version: '3.9'
services:

  pg-edge:
    image: postgres:16.4
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - pg_edge_data:/var/lib/postgresql/data
      - ./scripts/fdw/ddl_edge.sql:/docker-entrypoint-initdb.d/1.sql # Create data model with shards
      - ./scripts/fdw/data.sql:/docker-entrypoint-initdb.d/2.sql # Fill data
    depends_on:
      pg-sh1:
        condition: service_healthy
      pg-sh2:
        condition: service_healthy
      pg-sh3:
        condition: service_healthy
    networks:
      - backend

  pg-sh1:
    image: postgres:16.4
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5433:5432
    volumes:
      - pg_sh1_data:/var/lib/postgresql/data
      - ./scripts/fdw/ddl_shard.sql:/docker-entrypoint-initdb.d/1.sql # Create data model
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - backend

  pg-sh2:
    image: postgres:16.4
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5434:5432
    volumes:
      - pg_sh2_data:/var/lib/postgresql/data
      - ./scripts/fdw/ddl_shard.sql:/docker-entrypoint-initdb.d/1.sql # Create data model
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - backend

  pg-sh3:
    image: postgres:16.4
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5435:5432
    volumes:
      - pg_sh3_data:/var/lib/postgresql/data
      - ./scripts/fdw/ddl_shard.sql:/docker-entrypoint-initdb.d/1.sql # Create data model
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - backend

volumes:
  pg_edge_data:
  pg_sh1_data:
  pg_sh2_data:
  pg_sh3_data:

networks:
  backend:
    driver: bridge